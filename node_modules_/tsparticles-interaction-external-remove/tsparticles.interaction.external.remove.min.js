/*! For license information please see tsparticles.interaction.external.remove.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("tsparticles-engine"));else if("function"==typeof define&&define.amd)define(["tsparticles-engine"],t);else{var r="object"==typeof exports?t(require("tsparticles-engine")):t(e.window);for(var o in r)("object"==typeof exports?exports:e)[o]=r[o]}}(this,(e=>(()=>{"use strict";var t={818:t=>{t.exports=e}},r={};function o(e){var n=r[e];if(void 0!==n)return n.exports;var i=r[e]={exports:{}};return t[e](i,i.exports,o),i.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{o.r(n),o.d(n,{Remove:()=>t,loadExternalRemoveInteraction:()=>c});var e=o(818);class t{constructor(){this.quantity=2}get particles_nb(){return this.quantity}set particles_nb(e){this.quantity=e}load(e){var t;if(!e)return;const r=null!==(t=e.quantity)&&void 0!==t?t:e.particles_nb;void 0!==r&&(this.quantity=r)}}var r,i=function(e,t,r,o,n){if("m"===o)throw new TypeError("Private method is not writable");if("a"===o&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===o?n.call(e,r):n?n.value=r:t.set(e,r),r},a=function(e,t,r,o){if("a"===r&&!o)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!o:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?o:"a"===r?o.call(e):o?o.value:t.get(e)};class s extends e.ExternalInteractorBase{constructor(e){super(e),r.set(this,void 0),i(this,r,e,"f"),this.handleClickMode=e=>{const t=a(this,r,"f"),o=t.actualOptions;if(!o.interactivity.modes.remove||"remove"!==e)return;const n=o.interactivity.modes.remove.quantity;t.particles.removeQuantity(n)}}clear(){}init(){}async interact(){}isEnabled(){return!0}loadModeOptions(e,...r){e.remove||(e.remove=new t);for(const t of r)e.remove.load(null==t?void 0:t.remove)}reset(){}}function c(e){e.addInteractor("externalRemove",(e=>new s(e)))}r=new WeakMap})(),n})()));